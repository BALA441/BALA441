
                         KUBERNETES INSTALL
                -----------------------------------------


>> curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"

>> curl -LO https://dl.k8s.io/release/v1.29.2/bin/linux/amd64/kubectl
>> curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"

>> sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl


>> kubectl version --client


>> sudo apt-get update

>> sudo apt-get install -y apt-transport-https ca-certificates curl

>> curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

>> sudo chmod 644 /etc/apt/keyrings/kubernetes-apt-keyring.gpg # allow unprivileged APT programs to read this keyring

>> sudo chmod 644 /etc/apt/sources.list.d/kubernetes.list

>> sudo apt-get update
>> sudo apt-get install -y kubectl


          INSTALL  MASTER-NODE
   ---------------------------------------

>> sudo swapoff -a

>> sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

>> sudo nano /etc/modules-load.d/containerd.conf  add <overlay 
br_netfilterCopied>

>> sudo modprobe overlay
>> sudo modprobe br_netfilter


>> sudo nano /etc/sysctl.d/kubernetes.conf
 add ( net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1  )


>> sudo sysctl --system



>> nano /etc/hosts <put host entry for (master-IP,workernode-IP)
 

>> sudo nano /etc/default/kubelet
add (KUBELET_EXTRA_ARGS="--cgroup-driver=cgroupfs")

>> sudo systemctl daemon-reload && sudo systemctl restart kubelet


>> sudo nano /etc/docker/daemon.json
add (  {
      "exec-opts": ["native.cgroupdriver=systemd"],
      "log-driver": "json-file",
      "log-opts": {
      "max-size": "100m"
   },
       "storage-driver": "overlay2"
       }    )


>> sudo systemctl daemon-reload && sudo systemctl restart docker


>> sudo nano /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
u will change (Environment="KUBELET_EXTRA_ARGS=--fail-swap-on=false")


>> sudo systemctl daemon-reload && sudo systemctl restart kubelet

>> sudo kubeadm init --control-plane-endpoint=master-node --upload-certs

>> mkdir -p $HOME/.kube
>> sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
>> sudo chown $(id -u):$(id -g) $HOME/.kube/config
  

--kubectl get nodes---

--kubectl get pods----